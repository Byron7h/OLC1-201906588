package analizadores;
import java_cup.runtime.Symbol;






terminal suma;
terminal resta;
terminal mult;
terminal div;
terminal pot;
terminal mod;
terminal pare1;
terminal pare2;
terminal cor1;
terminal cor2;
terminal igual;
terminal asignacion;
terminal pyc;
terminal coma;
terminal duda1;
terminal duda1;

terminal pr_verdadero;
terminal pr_falso;
terminal pr_ingresar;
terminal pr_como;
terminal pr_con_valor;
terminal pr_si;
terminal pr_entonces;
terminal pr_fin_si;
terminal pr_de_lo_contrario;
terminal pr_segun;
terminal pr_hacer;
terminal pr_fin_segun;
terminal pr_para;
terminal pr_hasta;
terminal pr_fin_para;
terminal pr_mientras;
terminal pr_fin_mientras;
terminal pr_repetir;
terminal pr_thasta_que;
terminal pr_retomar;
terminal pr_metodo;
terminal pr_fin_metodo;
terminal pr_con_parametros;
terminal pr_funcion;
terminal pr_fin_funcion;
terminal pr_ejecutar;
terminal pr_imprimir;
terminal pr_imprimir_nl;
terminal pr_or;
terminal pr_and;
terminal pr_not;
terminal pr_mayor;
terminal pr_menor;
terminal pr_mayor_o_igual;
terminal pr_menor_o_igual;
terminal pr_es_igual;
terminal pr_es_diferente;
terminal pr_inicio;
terminal pr_fin;
terminal pr_con_incremental;

terminal td_cadena;
terminal td_numero;
terminal td_boolean;
terminal td_caracter;


terminal num;
terminal id;
terminal cadena;
terminal caracter;
terminal comentario_multilinea;
terminal comentario_unilinea;










 
non terminal INICIO,E;
start with INICIO;
INICIO::= E {:System.out.println("Fin de analisis de entrada");:}
;
E::= E coma id
| id
;




non terminal INICIO, GLOBALES, GLOBAL, INSTRUCCIONES, INSTRUCCION, ASIGNACION_, DECLARACION, EXPRE, VALOR, TIPO, LISTA_ID, LISTA_PARAMETROS, PRINT, RETORNO, EJECUCION, METODO, FUNCION, IF, RAMIFICACION,SEGUN, LISTA_SEGUN;
start with INICIO;


INICIO  ::= pr_inicio GLOBALES pr_fin ;

GLOBALES ::=    GLOBALES GLOBAL
                |GLOBAL
;
GLOBAL :=  INSTRUCCIONES 
           | METODO 
           | FUNCION
;

INSTRUCCIONES ::=   INSTRUCCIONES INSTRUCCION 
                |   INSTRUCCION
;

// instrucciones 
INSTRUCCION_R   ::= ASIGNACION_ pyc
                |   DECLARACION pyc
                |   PRINT pyc
                |   RETORNO pyc
                |   EJECUCION pyc
                |   SI
                |   SEGUN
                |   PARA 
;

INSTRUCCION   ::=   ASIGNACION_ pyc
                |   DECLARACION pyc
                |   PRINT pyc
                |   EJECUCION pyc
                |   SI
                |   SEGUN
                |   PARA 
;
                

DECLARACION   ::=   pr_ingresar LISTA_ID pr_como TIPO pr_con_valor EXPRE  
;

ASIGNACION_   ::=   LISTA_ID asignacion EXPRE
;


EXPRE   :=      pare1 EXPRE pare2

                |EXPRE suma EXPRE 
                |EXPRE resta EXPRE 
                |EXPRE mult EXPRE 
                |EXPRE div EXPRE 
                |EXPRE pot cor1 EXPRE cor2 
                |EXPRE mod EXPRE 

                |EXPRE pr_or EXPRE 
                |EXPRE pr_and EXPRE 
                |pr_not EXPRE 

                |EXPRE pr_mayor EXPRE 
                |EXPRE pr_menor EXPRE 
                |EXPRE pr_mayor_o_igual EXPRE 
                |EXPRE pr_menor_o_igual EXPRE 
                |EXPRE pr_es_igual EXPRE 
                |EXPRE pr_es_diferente EXPRE

                | VALOR
;

VALOR ::=       num
                | id
                | cadena
                | pr_verdadero
                | pr_falso
                | caracter
;

TIPO ::= td_cadena;
        | td_numero;
        | td_boolean;
        | td_caracter;    
;

LISTA_ID ::=  LISTA_ID coma id
            | id
;

LISTA_PARAMETROS ::= LISTA_PARAMETROS coma id TIPO
            | id TIPO
            | par1 LISTA_PARAMETROS par2
;

PRINT ::=   pr_imprimir EXPRE
        |   pr_imprimir_nl EXPRE
;

RETORNO ::= pr_retornar EXPRE
;

EJECUCION ::= pr_ejecutar id par1 par2
            | pr_ejecutar id LISTA_PARAMETROS 
;

METODO ::=  pr_metodo id INSTRUCCIONES pr_fin_metodo
            | pr_metodo id pr_con_parametros LISTA_PARAMETROS INSTRUCCIONES pr_fin_metodo
;

FUNCION ::= pr_funcion id TIPO INSTRUCCIONES_R pr_fin_funcion
            | pr_funcion id TIPO pr_con_parametros LISTA_PARAMETROS INSTRUCCIONES_R pr_fin_funcion
;

SI ::=        pr_si EXPRE pr_entonces INSTRUCCIONES pr_fin_si
            | pr_si EXPRE pr_entonces INSTRUCCIONES pr_de_lo_contrario INSTRUCCIONES pr_fin_si
            | pr_si EXPRE pr_entonces INSTRUCCIONES RAMIFICACION pr_fin_si
            | pr_si EXPRE pr_entonces INSTRUCCIONES RAMIFICACION pr_de_lo_contrario INSTRUCCIONES pr_fin_si
;

RAMIFICACION ::= RAMIFICACION pr_o_si EXPRE pr_entonces INSTRUCCIONES
                |pr_o_si EXPRE pr_entonces INSTRUCCIONES
;

SEGUN ::=   pr_segun EXPRE pr_hacer LISTA_SEGUN pr_fin segun
            | pr_segun EXPRE pr_hacer LISTA_SEGUN pr_de_lo_contrario r_entonces INSTRUCCIONES pr_fin segun
;

LISTA_SEGUN ::= LISTA_SEGUN duda1 EXPRE duda2 pr_entonces INSTRUCCIONES
            |   duda1 EXPRE duda2 pr_entonces INSTRUCCIONES
;

PARA ::=     pr_para EXPRE asignacion EXPRE pr_hasta EXPRE pr_hacer INSTRUCCIONES pr_fin_para
            |pr_para EXPRE asignacion EXPRE pr_hasta EXPRE pr_hacer  pr_fin_para
            |pr_para EXPRE asignacion EXPRE pr_hasta EXPRE pr_con_incremental EXPRE pr_hacer INSTRUCCIONES pr_fin_para
            |pr_para EXPRE asignacion EXPRE pr_hasta EXPRE pr_con_incremental EXPRE pr_hacer  pr_fin_para
;




